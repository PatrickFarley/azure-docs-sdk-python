### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.communication.chat.ChatClient.close
  - azure.communication.chat.ChatClient.create_chat_thread
  - azure.communication.chat.ChatClient.delete_chat_thread
  - azure.communication.chat.ChatClient.get_chat_thread
  - azure.communication.chat.ChatClient.get_chat_thread_client
  - azure.communication.chat.ChatClient.list_chat_threads
  class: azure.communication.chat.ChatClient
  example:
  - "Creating the ChatClient from a URL and token.<!--[!code-python[Main](les\\chat_client_sample.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\1\\\\azure-communication-chat-1.0.0b1\\\\samples\\\\chat_client_sample.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatClient, CommunicationUserCredential\n   chat_client = ChatClient(self.endpoint,\
    \ CommunicationUserCredential(self.token))\n\n   ````\n"
  fullName: azure.communication.chat.ChatClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.communication.chat
  name: ChatClient
  summary: 'A client to interact with the AzureCommunicationService Chat gateway.


    This client provides operations to create chat thread, delete chat thread,

    get chat thread by id, list chat threads, create chat thread client.'
  syntax:
    content: ChatClient(endpoint, credential, **kwargs)
    parameters:
    - description: The endpoint of the Azure Communication resource.
      id: endpoint
      type:
      - str
    - description: The credentials with which to authenticate.
      id: credential
      type:
      - CommunicationUserCredential
  type: class
  uid: azure.communication.chat.ChatClient
- class: azure.communication.chat.ChatClient
  fullName: azure.communication.chat.ChatClient.close
  langs:
  - python
  module: azure.communication.chat
  name: close()
  namewithoutparameters: close
  syntax:
    content: close()
    parameters: []
  type: method
  uid: azure.communication.chat.ChatClient.close
- class: azure.communication.chat.ChatClient
  example:
  - "Creating ChatThreadClient by creating a new chat thread.<!--[!code-python[Main](les\\\
    chat_client_sample.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    1\\\\s\\\\dist_temp\\\\1\\\\azure-communication-chat-1.0.0b1\\\\samples\\\\chat_client_sample.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from datetime\
    \ import datetime\n   from azure.communication.chat import(\n       ChatClient,\n\
    \       ChatThreadMember,\n       CommunicationUser,\n       CommunicationUserCredential\n\
    \   )\n\n   chat_client = ChatClient(self.endpoint, CommunicationUserCredential(self.token))\n\
    \n   topic = \"test topic\"\n   members = [ChatThreadMember(\n       user=self.user,\n\
    \       display_name='name',\n       share_history_time=datetime.utcnow()\n  \
    \ )]\n   chat_thread_client = chat_client.create_chat_thread(topic, members)\n\
    \n   ````\n"
  fullName: azure.communication.chat.ChatClient.create_chat_thread
  langs:
  - python
  module: azure.communication.chat
  name: create_chat_thread(topic, thread_members, **kwargs)
  namewithoutparameters: create_chat_thread
  summary: Creates a chat thread.
  syntax:
    content: create_chat_thread(topic, thread_members, **kwargs)
    parameters:
    - description: Required. The thread topic.
      id: topic
      isRequired: true
      type:
      - str
    - description: Required. Members to be added to the thread.
      id: thread_members
      isRequired: true
      type:
      - list[azure.communication.chat.ChatThreadMember]
    return:
      description: ChatThreadClient
      type:
      - azure.communication.chat.ChatThreadClient
  type: method
  uid: azure.communication.chat.ChatClient.create_chat_thread
- class: azure.communication.chat.ChatClient
  example:
  - "deleting chat thread.<!--[!code-python[Main](les\\chat_client_sample.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\1\\\\\
    azure-communication-chat-1.0.0b1\\\\samples\\\\chat_client_sample.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatClient, CommunicationUserCredential\n\n   chat_client = ChatClient(self.endpoint,\
    \ CommunicationUserCredential(self.token))\n   chat_client.delete_chat_thread(self._thread_id)\n\
    \n   ````\n"
  fullName: azure.communication.chat.ChatClient.delete_chat_thread
  langs:
  - python
  module: azure.communication.chat
  name: delete_chat_thread(thread_id, **kwargs)
  namewithoutparameters: delete_chat_thread
  summary: Deletes a thread.
  syntax:
    content: delete_chat_thread(thread_id, **kwargs)
    parameters:
    - description: Required. Thread id to delete.
      id: thread_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.communication.chat.ChatClient.delete_chat_thread
- class: azure.communication.chat.ChatClient
  example:
  - "Getting a chat thread by thread id.<!--[!code-python[Main](les\\chat_client_sample.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\1\\\\azure-communication-chat-1.0.0b1\\\\samples\\\\chat_client_sample.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatClient, CommunicationUserCredential\n\n   chat_client = ChatClient(self.endpoint,\
    \ CommunicationUserCredential(self.token))\n   chat_thread = chat_client.get_chat_thread(self._thread_id)\n\
    \n   ````\n"
  fullName: azure.communication.chat.ChatClient.get_chat_thread
  langs:
  - python
  module: azure.communication.chat
  name: get_chat_thread(thread_id, **kwargs)
  namewithoutparameters: get_chat_thread
  summary: Gets a chat thread.
  syntax:
    content: get_chat_thread(thread_id, **kwargs)
    parameters:
    - description: Required. Thread id to get.
      id: thread_id
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ChatThread, or the result of cls(response)
      type:
      - azure.communication.chat.ChatThread
  type: method
  uid: azure.communication.chat.ChatClient.get_chat_thread
- class: azure.communication.chat.ChatClient
  example:
  - "Creating the ChatThreadClient from an existing chat thread id.<!--[!code-python[Main](les\\\
    chat_client_sample.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    1\\\\s\\\\dist_temp\\\\1\\\\azure-communication-chat-1.0.0b1\\\\samples\\\\chat_client_sample.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatClient, CommunicationUserCredential\n\n   chat_client = ChatClient(self.endpoint,\
    \ CommunicationUserCredential(self.token))\n   chat_thread_client = chat_client.get_chat_thread_client(self._thread_id)\n\
    \n   ````\n"
  fullName: azure.communication.chat.ChatClient.get_chat_thread_client
  langs:
  - python
  module: azure.communication.chat
  name: get_chat_thread_client(thread_id, **kwargs)
  namewithoutparameters: get_chat_thread_client
  summary: Get ChatThreadClient by providing a thread_id.
  syntax:
    content: get_chat_thread_client(thread_id, **kwargs)
    parameters:
    - description: Required. The thread id.
      id: thread_id
      isRequired: true
      type:
      - str
    return:
      description: ChatThreadClient
      type:
      - azure.communication.chat.ChatThreadClient
  type: method
  uid: azure.communication.chat.ChatClient.get_chat_thread_client
- class: azure.communication.chat.ChatClient
  example:
  - "listing chat threads.<!--[!code-python[Main](les\\chat_client_sample.py )]-->\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\1\\\\\
    azure-communication-chat-1.0.0b1\\\\samples\\\\chat_client_sample.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.communication.chat\
    \ import ChatClient, CommunicationUserCredential\n   from datetime import datetime,\
    \ timedelta\n   import pytz\n\n   chat_client = ChatClient(self.endpoint, CommunicationUserCredential(self.token))\n\
    \   start_time = datetime.utcnow() - timedelta(days=2)\n   start_time = start_time.replace(tzinfo=pytz.utc)\n\
    \   chat_thread_infos = chat_client.list_chat_threads(results_per_page=5, start_time=start_time)\n\
    \n   print(\"list_threads succeeded with results_per_page is 5, and were created\
    \ since 2 days ago.\")\n   for info in chat_thread_infos:\n       print(\"thread\
    \ id:\", info.id)\n\n   ````\n"
  fullName: azure.communication.chat.ChatClient.list_chat_threads
  langs:
  - python
  module: azure.communication.chat
  name: list_chat_threads(**kwargs)
  namewithoutparameters: list_chat_threads
  summary: Gets the list of chat threads of a user.
  syntax:
    content: list_chat_threads(**kwargs)
    parameters:
    - description: The maximum number of chat threads returned per page.
      id: results_per_page
      isRequired: true
      type:
      - int
    - description: The earliest point in time to get chat threads up to.
      id: start_time
      isRequired: true
      type:
      - datetime.datetime
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ItemPaged[<xref:azure.communication.chat.ChatThreadInfo>]
      type:
      - azure.core.paging.ItemPaged
  type: method
  uid: azure.communication.chat.ChatClient.list_chat_threads
references:
- fullName: azure.communication.chat.ChatClient.close
  isExternal: false
  name: close()
  parent: azure.communication.chat.ChatClient
  uid: azure.communication.chat.ChatClient.close
- fullName: azure.communication.chat.ChatClient.create_chat_thread
  isExternal: false
  name: create_chat_thread(topic, thread_members, **kwargs)
  parent: azure.communication.chat.ChatClient
  uid: azure.communication.chat.ChatClient.create_chat_thread
- fullName: azure.communication.chat.ChatClient.delete_chat_thread
  isExternal: false
  name: delete_chat_thread(thread_id, **kwargs)
  parent: azure.communication.chat.ChatClient
  uid: azure.communication.chat.ChatClient.delete_chat_thread
- fullName: azure.communication.chat.ChatClient.get_chat_thread
  isExternal: false
  name: get_chat_thread(thread_id, **kwargs)
  parent: azure.communication.chat.ChatClient
  uid: azure.communication.chat.ChatClient.get_chat_thread
- fullName: azure.communication.chat.ChatClient.get_chat_thread_client
  isExternal: false
  name: get_chat_thread_client(thread_id, **kwargs)
  parent: azure.communication.chat.ChatClient
  uid: azure.communication.chat.ChatClient.get_chat_thread_client
- fullName: azure.communication.chat.ChatClient.list_chat_threads
  isExternal: false
  name: list_chat_threads(**kwargs)
  parent: azure.communication.chat.ChatClient
  uid: azure.communication.chat.ChatClient.list_chat_threads
- fullName: list[azure.communication.chat.ChatThreadMember]
  name: list[ChatThreadMember]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.communication.chat.ChatThreadMember
    name: ChatThreadMember
    uid: azure.communication.chat.ChatThreadMember
  - fullName: ']'
    name: ']'
  uid: list[azure.communication.chat.ChatThreadMember]
