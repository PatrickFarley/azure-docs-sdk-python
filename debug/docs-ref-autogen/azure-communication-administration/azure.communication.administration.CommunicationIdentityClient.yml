### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.communication.administration.CommunicationIdentityClient.create_user
  - azure.communication.administration.CommunicationIdentityClient.delete_user
  - azure.communication.administration.CommunicationIdentityClient.from_connection_string
  - azure.communication.administration.CommunicationIdentityClient.issue_token
  - azure.communication.administration.CommunicationIdentityClient.revoke_tokens
  class: azure.communication.administration.CommunicationIdentityClient
  example:
  - "<!--[!code-python[Main](les\\identity_samples.py )]-->\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\2\\\\azure-communication-administration-1.0.0b1\\\
    \\samples\\\\identity_samples.py\", \"xml:space\": \"preserve\", \"language\"\
    : \"python\", \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\
    \n````python\n\n   : utf-8\n\n   -------------------------------------------------------------------\n\
    \   ght (c) Microsoft Corporation. All rights reserved.\n   ed under the MIT License.\
    \ See License.txt in the project root for\n   e information.\n   --------------------------------------------------------------------\n\
    \n\n   entity_sample.py\n   ION:\n   e samples demonstrate identity client samples.\n\
    \n   uthenticating a client via a connection string\n\n   on identity_samples.py\n\
    \n   s\n\n   mmunicationIdentityClientSamples(object):\n\n   __init__(self):\n\
    \   self.connection_string = os.getenv('AZURE_COMMUNICATION_SERVICE_CONNECTION_STRING')\n\
    \n   issue_token(self):\n   from azure.communication.administration import CommunicationIdentityClient\n\
    \n   identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
    \   user = identity_client.create_user()\n   tokenresponse = identity_client.issue_token(user,\
    \ scopes=[\"chat\"])\n   print(tokenresponse)\n\n   revoke_tokens(self):\n   from\
    \ azure.communication.administration import CommunicationIdentityClient\n\n  \
    \ identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
    \   user = identity_client.create_user()\n   tokenresponse = identity_client.issue_token(user,\
    \ scopes=[\"chat\"])\n   identity_client.revoke_tokens(user)\n   print(tokenresponse)\n\
    \n   create_user(self):\n   from azure.communication.administration import CommunicationIdentityClient\n\
    \   identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
    \   user = identity_client.create_user()\n\n   print(user.identifier)\n\n   delete_user(self):\n\
    \   from azure.communication.administration import CommunicationIdentityClient\n\
    \   identity_client = CommunicationIdentityClient.from_connection_string(self.connection_string)\n\
    \   user = identity_client.create_user()\n   identity_client.delete_user(user)\n\
    \n   e__ == '__main__':\n   le = CommunicationIdentityClientSamples()\n   le.create_user()\n\
    \   le.delete_user()\n   le.issue_token()\n   le.revoke_tokens()\n\n   ````\n"
  fullName: azure.communication.administration.CommunicationIdentityClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.communication.administration
  name: CommunicationIdentityClient
  summary: Azure Communication Services Identity client.
  syntax:
    content: CommunicationIdentityClient(endpoint, credential, **kwargs)
    parameters:
    - description: The endpoint url for Azure Communication Service resource.
      id: endpoint
      type:
      - str
    - description: 'The credentials with which to authenticate. The value is an account

        shared access key'
      id: credential
  type: class
  uid: azure.communication.administration.CommunicationIdentityClient
- class: azure.communication.administration.CommunicationIdentityClient
  fullName: azure.communication.administration.CommunicationIdentityClient.create_user
  langs:
  - python
  module: azure.communication.administration
  name: create_user(**kwargs)
  namewithoutparameters: create_user
  summary: 'create a single Communication user


    return: CommunicationUser

    rtype: ~azure.communication.administration.CommunicationUser'
  syntax:
    content: create_user(**kwargs)
  type: method
  uid: azure.communication.administration.CommunicationIdentityClient.create_user
- class: azure.communication.administration.CommunicationIdentityClient
  fullName: azure.communication.administration.CommunicationIdentityClient.delete_user
  langs:
  - python
  module: azure.communication.administration
  name: delete_user(communication_user, **kwargs)
  namewithoutparameters: delete_user
  summary: Triggers revocation event for user and deletes all its data.
  syntax:
    content: delete_user(communication_user, **kwargs)
    parameters:
    - description: Azure Communication User to delete
      id: communication_user
      isRequired: true
      type:
      - azure.communication.administration.CommunicationUser
    return:
      description: None
      type:
      - None
  type: method
  uid: azure.communication.administration.CommunicationIdentityClient.delete_user
- class: azure.communication.administration.CommunicationIdentityClient
  example:
  - "Creating the CommunicationIdentityClient from a connection string.<!--[!code-python[Main](les\\\
    identity_samples.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [],\
    \ \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\\
    1\\\\s\\\\dist_temp\\\\2\\\\azure-communication-administration-1.0.0b1\\\\samples\\\
    \\identity_samples.py\", \"xml:space\": \"preserve\", \"language\": \"python\"\
    , \"linenos\": false, \"highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\
    \n\n   ````\n"
  fullName: azure.communication.administration.CommunicationIdentityClient.from_connection_string
  langs:
  - python
  module: azure.communication.administration
  name: from_connection_string(conn_str, **kwargs)
  namewithoutparameters: from_connection_string
  summary: Create CommunicationIdentityClient from a Connection String.
  syntax:
    content: from_connection_string(conn_str, **kwargs)
    parameters:
    - description: A connection string to an Azure Communication Service resource.
      id: conn_str
      isRequired: true
      type:
      - str
    - id: conn_str
      isRequired: true
    return:
      description: Instance of CommunicationIdentityClient.
      type:
      - azure.communication.CommunicationIdentityClient
  type: method
  uid: azure.communication.administration.CommunicationIdentityClient.from_connection_string
- class: azure.communication.administration.CommunicationIdentityClient
  fullName: azure.communication.administration.CommunicationIdentityClient.issue_token
  langs:
  - python
  module: azure.communication.administration
  name: issue_token(user, scopes, **kwargs)
  namewithoutparameters: issue_token
  summary: Generates a new token for an identity.
  syntax:
    content: issue_token(user, scopes, **kwargs)
    parameters:
    - description: Azure Communication User
      id: user
      isRequired: true
      type:
      - azure.communication.administration.CommunicationUser
    - description: List of scopes to be added to the token.
      id: scopes
      isRequired: true
      type:
      - list[str]
    return:
      description: CommunicationIdentityToken
      type:
      - azure.communication.administration.CommunicationIdentityToken
  type: method
  uid: azure.communication.administration.CommunicationIdentityClient.issue_token
- class: azure.communication.administration.CommunicationIdentityClient
  fullName: azure.communication.administration.CommunicationIdentityClient.revoke_tokens
  langs:
  - python
  module: azure.communication.administration
  name: revoke_tokens(user, issued_before=None, **kwargs)
  namewithoutparameters: revoke_tokens
  summary: Schedule revocation of all tokens of an identity.
  syntax:
    content: revoke_tokens(user, issued_before=None, **kwargs)
    parameters:
    - description: Azure Communication User.
      id: user
      isRequired: true
      type:
      - azure.communication.administration.CommunicationUser.
    - description: All tokens that are issued prior to this time should get revoked.
      id: issued_before
      isRequired: true
      type:
      - datetime.datetime.
    return:
      description: None
      type:
      - None
  type: method
  uid: azure.communication.administration.CommunicationIdentityClient.revoke_tokens
references:
- fullName: azure.communication.administration.CommunicationIdentityClient.create_user
  isExternal: false
  name: create_user(**kwargs)
  parent: azure.communication.administration.CommunicationIdentityClient
  uid: azure.communication.administration.CommunicationIdentityClient.create_user
- fullName: azure.communication.administration.CommunicationIdentityClient.delete_user
  isExternal: false
  name: delete_user(communication_user, **kwargs)
  parent: azure.communication.administration.CommunicationIdentityClient
  uid: azure.communication.administration.CommunicationIdentityClient.delete_user
- fullName: azure.communication.administration.CommunicationIdentityClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, **kwargs)
  parent: azure.communication.administration.CommunicationIdentityClient
  uid: azure.communication.administration.CommunicationIdentityClient.from_connection_string
- fullName: azure.communication.administration.CommunicationIdentityClient.issue_token
  isExternal: false
  name: issue_token(user, scopes, **kwargs)
  parent: azure.communication.administration.CommunicationIdentityClient
  uid: azure.communication.administration.CommunicationIdentityClient.issue_token
- fullName: azure.communication.administration.CommunicationIdentityClient.revoke_tokens
  isExternal: false
  name: revoke_tokens(user, issued_before=None, **kwargs)
  parent: azure.communication.administration.CommunicationIdentityClient
  uid: azure.communication.administration.CommunicationIdentityClient.revoke_tokens
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
